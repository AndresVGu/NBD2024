@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@*For coolkies*@
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var UserName = HttpContextAccessor.HttpContext.Request.Cookies["userName"]
            ?? UserManager.GetUserName(User);
         <li class="nav-item dropdown">
             <a class="nav-link dropdown-toggle" href="#" id="navbarIDDropdown"
             role="button" data-bs-toogle="dropdown"
             aria-haspopup="true"></a>
         </li>
        <!--

        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
        -->
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-page="/Account/Register" asp-area="Identity">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
